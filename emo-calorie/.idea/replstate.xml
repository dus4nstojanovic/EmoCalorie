<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1483733433678">{:repl-history {:ide [], :local [&quot;(+ 1 3)&quot; &quot;(stop-server)&quot; &quot;(ns emo-calorie.routes.emo-calorie-routes\n  (:require [ring.util.response :as response]\n            [compojure.core :refer :all]\n            [emo-calorie.views.emo-calorie-layout :refer [common-layout]]\n            [emo-calorie.models.query-defs :as query])\n  (:import (java.time LocalDateTime)\n           (java.text SimpleDateFormat)\n           (java.util Date)))&quot; &quot;(defn get-goal [request]\n  (get (query/get-goal-today) :goal))&quot; &quot;(get-goal)&quot; &quot;(defn get-goal [request]\n  (get (query/get-goal-today) :goal)\n  :goal)&quot; &quot;(defn get-goal [request]\n  (get (query/get-goal-today) :goal)\n  (:goal))&quot; &quot; (get-goal)&quot; &quot;(defn get-goal [request]\n  (for [goal (query/get-goal-today)]\n    goal))&quot; &quot;(defn get-goal [request]\n  (for [goal (query/get-goal-today)]\n    (get :goal goal)))&quot; &quot;(defn get-goal [request]\n  (for [goal (query/get-goal-today)]\n    (get goal :goal)))&quot; &quot;(ns emo-calorie.routes.emo-calorie-routes\n  (:require [ring.util.response :as response]\n            [compojure.core :refer :all]\n            [emo-calorie.views.emo-calorie-layout :refer [common-layout]]\n            [emo-calorie.models.query-defs :as query])\n  (:import (java.time LocalDateTime)\n           (java.text SimpleDateFormat)\n           (java.util Date)))\n\n(defn index-get [request]\n  (common-layout\n    [:p]))\n\n(defn get-goal [request]\n  (for [goal (query/get-goal-today)]\n    goal))&quot; &quot;(ns emo-calorie.routes.emo-calorie-routes\n  (:require [ring.util.response :as response]\n            [compojure.core :refer :all]\n            [emo-calorie.views.emo-calorie-layout :refer [common-layout]]\n            [emo-calorie.models.query-defs :as query]\n            [clojure.data.json :as json])\n  (:import (java.time LocalDateTime)\n           (java.text SimpleDateFormat)\n           (java.util Date)))\n\n(defn index-get [request]\n  (common-layout\n    [:p]))\n\n(defn get-goal [request]\n  (for [goal (query/get-goal-today)]\n    (json/write-str goal)))\n\n(defn post-goal [request]\n  (let [goal (get-in request [:params :goal])]\n    (query/clear-status!)\n    (query/insert-goal-today&lt;! {\n                                :goal     (read-string goal)\n                                :sdate    (.format (SimpleDateFormat. \&quot;MM/dd/yyyy\&quot;) (Date.))\n                                :calories 0})))\n\n(defroutes emo-calorie-routes\n           (GET \&quot;/\&quot; [] index-get)\n           (GET \&quot;/getgoal\&quot; [] get-goal)\n           (POST \&quot;/goal\&quot; [] post-goal))\n&quot; &quot;(get-goal [])&quot;], :remote []}}</component>
</project>